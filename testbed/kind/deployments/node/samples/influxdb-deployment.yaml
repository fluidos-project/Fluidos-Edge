#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: influxdb-pvc
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 2Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb
spec:
  selector:
    matchLabels:
      app: influxdb
  replicas: 1
  template:
    metadata:
      labels:
        app: influxdb
    spec:
#      nodeSelector:
#        kubernetes.io/hostname: "fluidos-provider-worker"
#      affinity:
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#            - matchExpressions:
#              - key: "node-role.fluidos.eu/worker"
#                operator: In
#                values:
#                - "true"
      hostNetwork: true
      containers:
      - name: influxdb
        image: influxdb:latest
        ports:
        - containerPort: 8086
#        volumeMounts:
#        - name: influxdb-storage
#          mountPath: /var/lib/influxdb2
        env:
        - name: DOCKER_INFLUXDB_INIT_MODE
          value: "setup"
        - name: DOCKER_INFLUXDB_INIT_USERNAME
          value: "user-fluidos"
        - name: DOCKER_INFLUXDB_INIT_PASSWORD
          value: "pass-fluidos"
        - name: DOCKER_INFLUXDB_INIT_ORG
          value: "org-fluidos"
        - name: DOCKER_INFLUXDB_INIT_BUCKET
          value: "bucket-fluidos"
        - name: DOCKER_INFLUXDB_INIT_RETENTION
          value: "0"
        - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
          value: "fluidos-edge-demo-token"
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "100m"
            memory: "128Mi"
#      volumes:
#      - name: influxdb-storage
#        persistentVolumeClaim:
#          claimName: influxdb-pvc

#---
#
#apiVersion: v1
#kind: Service
#metadata:
#  name: influxdb-service
#spec:
#  selector:
#    app: influxdb
#  ports:
#  - protocol: TCP
#    port: 8086 # The port your web server is listening on inside the container
#    targetPort: 8086 # The container port where your web server is running
##    nodePort: 30487 # A port in the range 30000-32767 to expose on the host
##  type: NodePort # ClusterIP / Can change to NodePort or LoadBalancer for external access
#
